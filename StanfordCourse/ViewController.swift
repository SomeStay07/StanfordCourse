//
//  ViewController.swift
//  StanfordCourse
//
//  Created by –¢–∏–º—É—Ä –ß–µ–±–µ—Ä–¥–∞ on 15/03/2019.
//  Copyright ¬© 2019 Tmur Cheberda. All rights reserved.
//

import UIKit

class ViewController: UIViewController {
    
    // —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞, –≥–¥–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–æ–ø–æ–∫ div –Ω–∞ 2 = —á–∏—Å–ª—É –ø–∞—Ä
    lazy var game = Concentration(numbersOfPairsOfCards: (cardButtons.count + 1) / 2)
    // —Å—á—ë—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è
    var flipCount = 0 { didSet { flipCountLabel.text = "Flips: \(flipCount)" }}
    
    @IBOutlet weak var flipCountLabel: UILabel!
    @IBOutlet var cardButtons: [UIButton]!
    
    
    @IBAction func touchCard(_ sender: UIButton) {
        // –Ω–∞–∂–∞—Ç–∏–µ +
        flipCount += 1
        // –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –±—É–¥–µ—Ç = –∏–Ω–¥–µ–∫—Å—É –º–∞—Å—Å–∏–≤–∞ –∏ –∑–∞–¥–µ–π—Å—Ç–≤—É–µ—Ç –º–µ—Ç–æ–¥
        if let cardNumber = cardButtons.firstIndex(of: sender){
            game.chooseCard(at: cardNumber)
            updateViewFromModel()
        }
    }
    // –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –∫–∞—Ä—Ç—ã, –ø–æ–¥–Ω—è—Ç–∏–µ –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
    func updateViewFromModel(){
        for index in cardButtons.indices {
            // –∫–Ω–æ–ø–∫–∞ = –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–Ω–æ–ø–∫–∏
            let button = cardButtons[index]
            // –∫–∞—Ä—Ç–∞ = –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–∞—Ä—Ç–µ
            let card = game.cards[index]
            // –µ—Å–ª–∏ –∫–∞—Ä—Ç–∞ –Ω–µ –ø–æ–¥–Ω—è—Ç–∞
            if card.isFaceUp {
                // –Ω–∞–∑–Ω–∞—á–∞–µ–º —ç–º–æ–¥–∑–∏ –∏ —Ü–≤–µ—Ç
                button.setTitle(emoji(for: card), for: UIControl.State.normal)
                button.backgroundColor = #colorLiteral(red: 1.0, green: 1.0, blue: 1.0, alpha: 1.0)
                // –æ–ø—É—Å–∫–∞–µ–º –∫–∞—Ä—Ç—É –∏ –¥–µ–ª–∞–µ–º —Ä—É–±–∞—à–∫—É –æ—Ä–∞–Ω–∂–µ–≤—ã–º —Ü–≤–µ—Ç–æ–º
            } else {
                button.setTitle("", for: UIControl.State.normal)
                button.backgroundColor = card.isMatched ? #colorLiteral(red: 1, green: 0.5763723254, blue: 0, alpha: 0) : #colorLiteral(red: 1, green: 0.5763723254, blue: 0, alpha: 1)
            }
        }
    }
    
    // –º–∞—Å—Å–∏–≤ –Ω–∞—à–∏—Ö —ë–º–æ–¥–∑–∏
    var emojiChoices = ["üßû‚Äç‚ôÇÔ∏è","ü¶πüèæ‚Äç‚ôÇÔ∏è","üëª","ü•∂","üß∂","ü¶Ñ","üçÑ"]
    
    var emoji = [Int:String]()
    // —ç–º–æ–¥–∑–∏ –¥–ª—è –∫–∞—Ä—Ç—ã
    func emoji(for card: Card) -> String {
        
        if emoji[card.identifier] == nil, emojiChoices.count > 0 {
            // –±–µ—Ä–µ–º —ç–º–æ–¥–∑–∏ –∏–∑ –º–∞—Å—Å–∏–≤–∞ —ç–º–æ–¥–∑–∏
            let randomIndex = Int(arc4random_uniform(UInt32(emojiChoices.count)))
            // –≤—Å—Ç–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —ç–º–æ–¥–∑–∏ –≤ —Å–ª–æ–≤–∞—Ä—å
            emoji[card.identifier] = emojiChoices.remove(at: randomIndex)
        }
        // –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ nil
        return emoji[card.identifier] ?? "?"
    }
}

